apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-allopen'
apply plugin: "androidx.navigation.safeargs.kotlin"

allOpen {
    // allows mocking for classes w/o directly opening them for release builds
    annotation 'io.kamara.githubers.testing.OpenClass'
}

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.2"
    defaultConfig {
        applicationId "io.kamara.githubers"
        minSdkVersion 21
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }


    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    dataBinding {
        enabled = true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

dependencies {
    // Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    // Support libraries
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.core:core-ktx:1.1.0'
    implementation "androidx.fragment:fragment-ktx:1.1.0"

    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycle_version"

    implementation 'androidx.room:room-runtime:2.2.0'
    kapt 'androidx.room:room-compiler:2.2.0'
    implementation "androidx.room:room-ktx:2.2.0"

    implementation "androidx.navigation:navigation-fragment-ktx:$nav_version"
    implementation "androidx.navigation:navigation-ui-ktx:$nav_version"

    // Retrofi 2
    implementation "com.squareup.retrofit2:converter-gson:$retrofitVersion"
    implementation "com.squareup.retrofit2:retrofit:$retrofitVersion"
    implementation 'com.squareup.retrofit2:converter-moshi:2.6.0'

    // Glide
    implementation "com.github.bumptech.glide:glide:$glideVersion"
    kapt "com.github.bumptech.glide:compiler:$glideVersion"

    // Dagger 2
    implementation "com.google.dagger:dagger:$daggerVerion"
    kapt "com.google.dagger:dagger-compiler:$daggerVerion"
    implementation "com.google.dagger:dagger-android:$daggerVerion"
    implementation "com.google.dagger:dagger-android-support:$daggerVerion"
    kapt "com.google.dagger:dagger-android-processor:$daggerVerion"

    implementation  "com.jakewharton.timber:timber:$timberVersion"


    // Testing
    testImplementation 'junit:junit:4.12'

    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'

    testImplementation "android.arch.core:core-testing:2.0.0"
    androidTestImplementation "android.arch.core:core-testing:2.0.0"

    testImplementation("com.squareup.okhttp3:mockwebserver:4.2.1")


    testImplementation "org.mockito:mockito-core:$mockito"
    androidTestImplementation "org.mockito:mockito-core:$mockito"
    androidTestImplementation "org.mockito:mockito-android:$mockito_android"


}
